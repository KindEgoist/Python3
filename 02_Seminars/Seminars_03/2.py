#  Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет.

# *Пример:*

# - список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: Нет второго вхождения
# - список: ["123", "234", 123, "567"], ищем: "123", ответ: Нет второго вхождения
# - список: [], ищем: "123", ответ: Нет второго вхождения

# def find_second_index(lst, substr):
#     if lst.count(substr) < 2:
#         return 'Нет второго вхождения'
#     return lst.index(substr, lst.index(substr)+1)

# tests = [
#     [["qwe", "asd", "zxc", "qwe", "ertqwe"], "qwe"],
#     [["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], "йцу"],
#     [["йцу", "фыв", "ячс", "цук", "йцукен"], "йцу"],
#     [["123", "234", 123, "567"], "123"],
#     [[], "123"]
# ]

# for test, substr in tests:
#     print(find_second_index(test, substr))

spisok = ['строка1', 'строка2', 'строка3', 'строка1'] #spisok = ['строка2', 'строка3', 'строка1']
find_str = 'строка1'
if spisok.count(find_str) < 2:
    print(f'Второго вхождения строки {find_str} нет в заданном списке')
else:
    spisok.remove(find_str) # удаляем первое вхождение в список
print(spisok.index(find_str) + 1) # ищем строку в оставшемся списке и прибавляем тот индекс, который удалили
